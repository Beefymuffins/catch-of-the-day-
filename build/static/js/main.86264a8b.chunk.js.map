{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","fetch","storeId","content","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","context","setItem","stringify","removeBinding","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.86264a8b.chunk.js","sourcesContent":["export function formatPrice(cents) {\n    return (cents / 100).toLocaleString('en-US', {\n        style: 'currency',\n        currency: 'USD',\n    });\n}\n\nexport function rando(arr) {\n    return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n    return text\n        .toString()\n        .toLowerCase()\n        .replace(/\\s+/g, '-')\n        .replace(/[^\\w-]+/g, '')\n        .replace(/--+/g, '-')\n        .replace(/^-+/, '')\n        .replace(/-+$/, '');\n}\n\nexport function getFunName() {\n    const adjectives = [\n        'adorable',\n        'beautiful',\n        'clean',\n        'drab',\n        'elegant',\n        'fancy',\n        'glamorous',\n        'handsome',\n        'long',\n        'magnificent',\n        'old-fashioned',\n        'plain',\n        'quaint',\n        'sparkling',\n        'ugliest',\n        'unsightly',\n        'angry',\n        'bewildered',\n        'clumsy',\n        'defeated',\n        'embarrassed',\n        'fierce',\n        'grumpy',\n        'helpless',\n        'itchy',\n        'jealous',\n        'lazy',\n        'mysterious',\n        'nervous',\n        'obnoxious',\n        'panicky',\n        'repulsive',\n        'scary',\n        'thoughtless',\n        'uptight',\n        'worried',\n    ];\n\n    const nouns = [\n        'women',\n        'men',\n        'children',\n        'teeth',\n        'feet',\n        'people',\n        'leaves',\n        'mice',\n        'geese',\n        'halves',\n        'knives',\n        'wives',\n        'lives',\n        'elves',\n        'loaves',\n        'potatoes',\n        'tomatoes',\n        'cacti',\n        'foci',\n        'fungi',\n        'nuclei',\n        'syllabuses',\n        'analyses',\n        'diagnoses',\n        'oases',\n        'theses',\n        'crises',\n        'phenomena',\n        'criteria',\n        'data',\n    ];\n\n    return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n    static propTypes = {\n        history: PropTypes.object,\n    };\n\n    myInput = React.createRef();\n\n    goToStore = (event) => {\n        // 1. Stop the form from submitting\n        event.preventDefault();\n        // 2. get the text from that input\n        const storeName = this.myInput.current.value;\n        // 3. Change the page to /store/whatever-they-entered\n        this.props.history.push(`/store/${storeName}`);\n    };\n\n    render() {\n        return (\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\n                <h2>Please Enter A Store</h2>\n                {/* comments need the {} brackets. All JS needs to be in the {} in JSX. Has to be inside the return element, Not above it */}\n                <input type=\"text\" ref={this.myInput} required placeholder=\"Store Name\" defaultValue={getFunName()} />\n                <button type=\"submit\"> Visit Store →</button>\n            </form>\n        );\n    }\n}\n\nexport default StorePicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = (props) => (\n    <header className=\"top\">\n        <h1>\n            Catch\n            <span className=\"ofThe\">\n                <span className=\"of\">of</span>\n                <span className=\"the\">the</span>\n            </span>\n            Day\n        </h1>\n        <h3 className=\"tagline\">\n            <span>{props.tagline}</span>\n        </h3>\n    </header>\n);\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired,\n};\n\n// class Header extends React.Component {\n//     render() {\n//         return (\n//             <header className=\"top\">\n//                 <h1>\n//                     Catch\n//                     <span className=\"ofThe\">\n//                         <span className=\"of\">of</span>\n//                         <span className=\"the\">the</span>\n//                     </span>\n//                     Day\n//                 </h1>\n//                 <h3 className=\"tagline\">\n//                     <span>{this.props.tagline}</span>\n//                 </h3>\n//             </header>\n//         );\n//     }\n// }\n\nexport default Header;\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Order extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        order: PropTypes.object,\n        removeFromOrder: PropTypes.func,\n    };\n\n    renderOrder = (key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === 'available';\n        const transitionOptions = {\n            classNames: 'order',\n            key,\n            timeout: { enter: 500, exit: 500 },\n        };\n\n        // Make sure the fish is loaded before we continue\n        if (!fish) return null;\n\n        if (!isAvailable) {\n            return (\n                <CSSTransition {...transitionOptions}>\n                    <li key={key}>Sorry {fish ? fish.name : 'fish'} is no longer available</li>\n                </CSSTransition>\n            );\n        }\n        return (\n            <CSSTransition {...transitionOptions}>\n                <li key={key}>\n                    <span>\n                        <TransitionGroup component=\"span\" className=\"count\">\n                            <CSSTransition {...transitionOptions}>\n                                <span>{count}</span>\n                            </CSSTransition>\n                        </TransitionGroup>\n                        lbs {fish.name}\n                        {formatPrice(count * fish.price)}\n                        <button type=\"button\" onClick={() => this.props.removeFromOrder(key)}>\n                            &times;\n                        </button>\n                    </span>\n                </li>\n            </CSSTransition>\n        );\n    };\n\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if (isAvailable) {\n                return prevTotal + count * fish.price;\n            }\n            return prevTotal;\n        }, 0);\n\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\" className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    Total:\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Order;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n    nameRef = React.createRef();\n\n    priceRef = React.createRef();\n\n    statusRef = React.createRef();\n\n    descRef = React.createRef();\n\n    imageRef = React.createRef();\n\n    static propTypes = {\n        addFish: PropTypes.func,\n    };\n\n    createFish = (event) => {\n        // 1. Stop form from subitting\n        event.preventDefault();\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value,\n        };\n        this.props.addFish(fish);\n        // refresh the form\n        event.currentTarget.reset();\n    };\n\n    render() {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n                <select name=\"status\" ref={this.statusRef}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n\n                <textarea name=\"desc\" ref={this.descRef} type=\"text\" placeholder=\"Desc\" />\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n                <button type=\"submit\">+ Add Fish</button>\n            </form>\n        );\n    }\n}\n\nexport default AddFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n    static propTypes = {\n        fish: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number,\n        }),\n        updateFish: PropTypes.func,\n        index: PropTypes.string,\n    };\n\n    handleChange = (event) => {\n        console.log(event.currentTarget.value);\n        // update that fish\n        // 1. Take a copy ofthat current fish\n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value,\n        };\n        this.props.updateFish(this.props.index, updatedFish);\n    };\n\n    render() {\n        return (\n            <div className=\"fish-edit\">\n                <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\n                <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price} />\n                <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} />\n                <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\n                <button type=\"button\" onClick={() => this.props.deleteFish(this.props.index)}>\n                    Remove Fish\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default EditFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory.</p>\n        <button type=\"button\" className=\"github\" onClick={() => props.authenticate('Github')}>\n            Log In With Github\n        </button>\n        <button type=\"button\" className=\"facebook\" onClick={() => props.authenticate('Facebook')}>\n            Log In With Facebook\n        </button>\n        <button type=\"button\" className=\"twitter\" onClick={() => props.authenticate('Twitter')}>\n            Log In With Twitter\n        </button>\n    </nav>\n);\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import Rebase from 're-base';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/database';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: 'AIzaSyAEkyYEc2egIqie6NNqJImCDACysE1_L0U',\n    authDomain: 'catch-of-the-day-beefy.firebaseapp.com',\n    databaseURL: 'https://catch-of-the-day-beefy-default-rtdb.firebaseio.com',\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n// this is a default export\nexport default base;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase/app';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        addFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func,\n    };\n\n    state = {\n        uid: null,\n        owner: null,\n    };\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.authHandler({ user });\n            }\n        });\n    }\n\n    authHandler = async (authData) => {\n        // 1. Look up the current store in the firebase database\n        const store = await base.fetch(this.props.storeId, { content: this });\n        // 2. Claim it if there is no owner\n        if (!store.owner) {\n            // save it as out own\n            await base.post(`${this.props.storeId}/owner`, { data: authData.user.uid });\n        }\n        // 3. Set the sate of the inventory component to reflect the current user\n        this.setState({\n            uid: authData.user.uid, // checks who's logging in\n            owner: store.owner || authData.user.uid, // checks what the owners uid is, and compares the two to see if they are owner\n        });\n    };\n\n    authenticate = (provider) => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n    };\n\n    logout = async () => {\n        await firebase.auth().signOut();\n        this.setState({ uid: null });\n    };\n\n    render() {\n        const logout = (\n            <button type=\"button\" onClick={this.logout}>\n                Log Out!\n            </button>\n        );\n\n        // 1. check if they are logged in\n        if (!this.state.uid) {\n            return <Login authenticate={this.authenticate} />;\n        }\n\n        // 2. Check if they are not the owner of the store\n        if (this.state.uid !== this.state.owner) {\n            return (\n                <div>\n                    <p>Sorry, you are not the owner.</p>\n                    {logout}\n                </div>\n            );\n        }\n\n        // 3. They must be the owner, just render the inventory normally\n        return (\n            <div className=\"inventory\">\n                <h2>Inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map((key) => (\n                    <EditFishForm\n                        key={key}\n                        index={key}\n                        fish={this.props.fishes[key]}\n                        updateFish={this.props.updateFish}\n                        deleteFish={this.props.deleteFish}\n                    />\n                ))}\n                <AddFishForm addFish={this.props.addFish} />\n                <button type=\"button\" onClick={this.props.loadSampleFishes}>\n                    Load Sample Fish\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n    fish1: {\n        name: 'Pacific Halibut',\n        image: '/images/hali.jpg',\n        desc: 'Everyone’s favorite white fish. We will cut it to the size you need and ship it.',\n        price: 1724,\n        status: 'available',\n    },\n\n    fish2: {\n        name: 'Lobster',\n        image: '/images/lobster.jpg',\n        desc: 'These tender, mouth-watering beauties are a fantastic hit at any dinner party.',\n        price: 3200,\n        status: 'available',\n    },\n\n    fish3: {\n        name: 'Sea Scallops',\n        image: '/images/scallops.jpg',\n        desc: 'Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound',\n        price: 1684,\n        status: 'unavailable',\n    },\n\n    fish4: {\n        name: 'Mahi Mahi',\n        image: '/images/mahi.jpg',\n        desc: 'Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. ',\n        price: 1129,\n        status: 'available',\n    },\n\n    fish5: {\n        name: 'King Crab',\n        image: '/images/crab.jpg',\n        desc: 'Crack these open and enjoy them plain or with one of our cocktail sauces',\n        price: 4234,\n        status: 'available',\n    },\n\n    fish6: {\n        name: 'Atlantic Salmon',\n        image: '/images/salmon.jpg',\n        desc: 'This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!',\n        price: 1453,\n        status: 'available',\n    },\n\n    fish7: {\n        name: 'Oysters',\n        image: '/images/oysters.jpg',\n        desc: 'A soft plump oyster with a sweet salty flavor and a clean finish.',\n        price: 2543,\n        status: 'available',\n    },\n\n    fish8: {\n        name: 'Mussels',\n        image: '/images/mussels.jpg',\n        desc: 'The best mussels from the Pacific Northwest with a full-flavored and complex taste.',\n        price: 425,\n        status: 'available',\n    },\n\n    fish9: {\n        name: 'Jumbo Prawns',\n        image: '/images/prawns.jpg',\n        desc: 'With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.',\n        price: 2250,\n        status: 'available',\n    },\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number,\n        }),\n        addToOrder: PropTypes.func,\n    };\n\n    render() {\n        const { image, name, price, desc, status } = this.props.details;\n        const isAvailable = status === 'available';\n\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name} />\n                <h3 className=\"fish-name\">\n                    {name}\n                    <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button type=\"button\" disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>\n                    {isAvailable ? 'Add To Order' : 'Sold Out'}\n                </button>\n            </li>\n        );\n    }\n}\n\nexport default Fish;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {},\n    };\n\n    static propTypes = {\n        match: PropTypes.object,\n    };\n\n    componentDidMount() {\n        const { params } = this.props.match;\n        // First reinstate our localstorage\n        const localStorageRef = localStorage.getItem(params.storeId);\n        if (localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef) });\n        }\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: 'fishes',\n        });\n    }\n\n    componentDidUpdate() {\n        // console.log(this.state.order);\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n\n    addFish = (fish) => {\n        // 1. Take a copy of the existing state\n        const fishes = { ...this.state.fishes };\n        // 2.  Add our new fish to that  fishes variable\n        fishes[`fish${Date.now()}`] = fish;\n        // 3. set the new fishes object to state\n        this.setState({ fishes });\n    };\n\n    updateFish = (key, updatedFish) => {\n        // 1. Take a copy of current state\n        const fishes = { ...this.state.fishes };\n        // 2. Update that state\n        fishes[key] = updatedFish;\n        // 3. set that to state\n        this.setState({ fishes });\n    };\n\n    deleteFish = (key) => {\n        // 1. take a copy  of state\n        const fishes = { ...this.state.fishes };\n        // 2. update the state\n        fishes[key] = null; // fishes[key] = the same as fishes.fish1. fishes.fish2 ect.\n        // 3. Update state\n        this.setState({ fishes });\n    };\n\n    loadSampleFishes = () => {\n        this.setState({ fishes: sampleFishes });\n    };\n\n    addToOrder = (key) => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. Either add to the order, or update the number in our order\n        order[key] = order[key] + 1 || 1;\n        // 3. Call setState to update our state object\n        this.setState({ order });\n    };\n\n    removeFromOrder = (key) => {\n        // 1. Take a copy of the state\n        const order = { ...this.state.order };\n        // 2. Remove that item from order\n        delete order[key];\n        // 3. Update State\n        this.setState({ order });\n    };\n\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\" />\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map((key) => (\n                            <Fish key={key} index={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} />\n                        ))}\n                    </ul>\n                </div>\n                <Order fishes={this.state.fishes} order={this.state.order} removeFromOrder={this.removeFromOrder} />\n                <Inventory\n                    addFish={this.addFish}\n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish}\n                    loadSampleFishes={this.loadSampleFishes}\n                    fishes={this.state.fishes}\n                    storeId={this.props.match.params.storeId}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h2>Not Found!?!?!?!?!?</h2>\n    </div>\n);\n\nexport default NotFound;\n","import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={StorePicker} />\n            <Route path=\"/store/:storeId\" component={App} />\n            <Route component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}